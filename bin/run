#!/bin/sh
# Copyright (C) 2015 Real-Time Innovations, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# Purpose: Utility to launch lua scripts with correct LUA_PATH and LUA_CPATH,
#          so that module dependencies are correctly resolved, and the scripts
#          can be location independent
#
# Usage:
#         run <lua_script> <lua_script_args>
#
#         e.g.
#               run xml2ddsl <file.xml>
#		  or
#               ../../../bin/run xml2ddsl test.xml
#
# Configuration:
#   Assumes the following package layout structure:
#
#   MY_HOME/
#       <any-dir>/run     <<<=== THIS SCRIPT
#       bin/
#           [<arch>/]
#       lib/
#           [<arch>/]
#       src/
#
#   1. The <lua_script> must be co-located in the same directory as this
#      shell script or in the current working directory or must be an
#      absolute path to the script
#   2. Note the .lua extenion is added automatically, and should not be
#      specified
#   3. If a lua interpreter is present in the the bin/ directories,
#      it is the one used (instead of the one installed on the system)
#   4. The module dependencies must be located in ../src/ or ../lib/
#      directories. The src/ directory contents, if present, overide the lib/
#      definitions (thus allowing for rapid development). The lib/* directories
#      may have compiled lua byte-code (created using luac on the src/ files).
#
# Created: Rajive Joshi, 2015 Jun 26
#-------------------------------------------------------------------------------

MY_HOME=$(cd $(dirname "$0")/..; pwd -P)

# Locate architecture specific path, if any:
# NOTE: we assume there will be only one match
MY_BIN_ARCH=`echo ${MY_HOME}/bin/*$(uname)*`
MY_LIB_ARCH=`echo ${MY_HOME}/lib/*$(uname)*`

# ensure that we can find the lua scripts and their dependencies

# src/ (dev tree) lua overrides the byte code in lib (for distribution)
export LUA_PATH=\
"${MY_HOME}/src/?.lua;${MY_HOME}/src/?/init.lua;\
${MY_LIB_ARCH}/?.lc;${MY_LIB_ARCH}/?/init.lc;\
${MY_HOME}/lib/lua/?.lua;${MY_HOME}/lib/lua/?/init.lua;\
${MY_HOME}/lib/lua/?.lc;${MY_HOME}/lib/lua/?/init.lc;"

export LUA_CPATH="${MY_HOME}/lib/?.so;${MY_LIB_ARCH}/?.so;;"


# use our lua interpreter, if any, in the bin directory:
PATH=${MY_HOME}/bin:${MY_BIN_ARCH}:${PATH}
LD_LIBRARY_PATH=${MY_HOME}/lib:${MY_LIB_ARCH}:${LD_LIBRARY_PATH}
DYLD_LIBRARY_PATH=${MY_HOME}/lib:${MY_LIB_ARCH}:${DYLD_LIBRARY_PATH}

# build the lua command path
LUA_CMD=$1; shift
if [ -r ${LUA_CMD}.lua ]; then
	LUA_CMD_PATH=${LUA_CMD}.lua                # use it, if valid as specified
elif [ -r ${MY_HOME}/src/${LUA_CMD}.lua ]; then
	LUA_CMD_PATH=${MY_HOME}/src/${LUA_CMD}.lua # get it from the src directory
elif [ -r ${MY_HOME}/bin/${LUA_CMD}.lua ]; then
	LUA_CMD_PATH=${MY_HOME}/bin/${LUA_CMD}.lua # get it from the bin directory
elif [ -r ${MY_LIB_ARCH}/${LUA_CMD}.lc ]; then
	LUA_CMD_PATH=${MY_LIB_ARCH}/${LUA_CMD}.lc # get it from arch lib directory
elif [ -r ${MY_HOME}/lib/lua/${LUA_CMD}.lc ]; then
	LUA_CMD_PATH=${MY_HOME}/lib/lua/${LUA_CMD}.lc # get it from lib directory
else
	echo "${LUA_CMD}: Command not found"
	exit 1
fi

# invoke the lua interpreter
env lua ${LUA_CMD_PATH} $*

#echo MY_HOME=${MY_HOME}
#echo MY_BIN_ARCH=${MY_BIN_ARCH}
#echo MY_LIB_ARCH=${MY_LIB_ARCH}
#echo LUA_CMD_PATH=${LUA_CMD_PATH}
